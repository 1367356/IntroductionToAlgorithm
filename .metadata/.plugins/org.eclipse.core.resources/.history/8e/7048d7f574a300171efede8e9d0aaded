package redBlackTree;

public class RedBlackTree <T extends Comparable<T>>{
		public static final boolean RED=true;
		public static final boolean BLACK=false;
	    public RBTreeNode NIL;
	    public RBTreeNode root;
		public class RBTreeNode<T extends Comparable<T>>{
			RBTreeNode leftChild;
			RBTreeNode rightChild;
			RBTreeNode parent;
			T key;
			boolean color;
		}
		public void insert(T key){
			RBTreeNode newRBTreeNode=new RBTreeNode<>(); 
			newRBTreeNode.key=key;
			RBTreeNode y=NIL;
			RBTreeNode x=root;
			while(x!=NIL){
				y=x;
				if(newRBTreeNode.key.compareTo(x.key)<0){
					x=x.leftChild;
				}else{
					x=x.rightChild;
				}
			}
			newRBTreeNode.parent=y;
			if(y==NIL){
				root=newRBTreeNode;
			}else if(newRBTreeNode.key.compareTo(y.key)<0){
				y.leftChild=newRBTreeNode;
			}else{
				y.rightChild=newRBTreeNode;
			}
			newRBTreeNode.leftChild=NIL;
			newRBTreeNode.rightChild=NIL;
			newRBTreeNode.color=RED;
			insertFixUp(newRBTreeNode);
		}
		private void insertFixUp(RBTreeNode newRBTreeNode) {
			// TODO Auto-generated method stub
			
		}
}
