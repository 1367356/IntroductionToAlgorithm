package class02;

import java.io.InputStream;
import java.util.ArrayList;
import java.util.List;
import java.util.Scanner;

import RepresentationGraph.Graph.Node;

/**
 * 广度优先搜索：第22章第二节
 * @author liyafei
 *
 */
public class BFS {
	List list=new ArrayList();
	/**
	 * 图节点
	 * @author liyafei
	 *
	 */
	public class Node{
		Node link;
		int key;
		String color="WHITE";
	}
	
	/**
	 * 创建图，以链表的方式创建图
	 * @return 返回图的链表形式，其中数组中每个位置是一个顶点的链表
	 */
//	public Node[]  createGraph(){
	public List  createGraph(){
		Class clazz=this.getClass();
		InputStream ins=clazz.getResourceAsStream("/data1.txt");   //通过外部数据创建链表,使用/加载src目录下的文件
			                                                                                  //不使用/是加载类路径下的文件
		Scanner scanner=new Scanner(ins);  //流输入。
		while(scanner.hasNextLine()){
			String s=scanner.nextLine();
			Scanner oneLine=new Scanner(s);
			Node first=null;
			Node newNode,last=null;
			while(oneLine.hasNext()){
				String s1=oneLine.next();
				int num=Integer.parseInt(s1);
				if(num==999)
					break;
				newNode=new Node();
				newNode.key=num;
				newNode.link=null;
				if(first ==null){
					first=newNode;
					last=newNode;
				}else{
					last.link=newNode;
					last=newNode;
				}
			}
			list.add(first);
        }
		return list;
	}
	
	/**
	 * 打印图
	 */
	public void printGraph(){
		for (int i = 0; i < list.size(); i++) {   

			Node first=(Node) list.get(i);
			if(first==null){
				break;
			}
			System.out.println("打印了第"+(i+1)+"个节点的数据");
			while(first!=null){
				System.out.print(first.key+"  ");
				first=first.link;
			}
			System.out.println("");
		}
	}
	
}
