package RepresentationGraph;

import java.io.InputStream;
import java.util.Scanner;


public class Graph<T> {
					public Node<T> first,newNode,last;
					protected Node<T>[] graph;
					protected int maxSize;
					protected int gSize;
					public int count=0;
					public class Node<T>{
						Node link;
						int key;
					}
					public Node[]  createGraph(){
						Class clazz=this.getClass();
						InputStream ins=clazz.getResourceAsStream("/data.txt");   //通过外部数据创建链表,使用/加载src目录下的文件
							                                                                                  //不使用/是加载类路径下的文件
						Scanner scanner=new Scanner(ins);  //流输入。
	 				while(scanner.hasNextLine()){
							String s=scanner.nextLine();
							Scanner oneLine=new Scanner(s);

							while(oneLine.hasNext()){
								String s1=oneLine.next();
								int num=Integer.parseInt(s1);
								if(num==999)
									break;
								newNode=new Node<T>();
								newNode.key=num;
								newNode.link=null;
								if(first ==null){
									first=newNode;
									last=newNode;
								}else{
									last.link=newNode;
									last=newNode;
								}
							}
							graph[count]=first;
							count++;
				        }
	 				return graph;
					}
	
					
}
