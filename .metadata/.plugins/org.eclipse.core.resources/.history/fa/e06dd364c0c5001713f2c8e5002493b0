package maximumsubarray;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import mydatastructure.Pojo;

public class MaximumSubArray {

	public Pojo findMaxCrossingSubArray(int[] arr,int low,int mid,int high){
		Pojo pojo=new Pojo();
		int leftSum=Integer.MIN_VALUE;
		int sum=0;
		int maxLeft=-1;
		for (int i = mid; i >= 0; i--) {
			sum=sum+arr[i];
			if(sum>leftSum){
				leftSum=sum;
				maxLeft=i;
			}
		}
		int rightSum=Integer.MIN_VALUE;
		sum=0;
		int maxRight=-1;
		for (int j = mid+1; j < high; j++) {
			sum=sum+arr[j];
			if(sum>rightSum){
				rightSum=sum;
				maxRight=j;
			}
		}
		pojo.setData1(maxLeft);
		pojo.setData2(maxRight);
		pojo.setData3(leftSum+rightSum);
		return pojo;	
	}
	public void findMaximumSubArray(){
		
	}
}
